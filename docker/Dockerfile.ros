# This is an auto generated Dockerfile for ros:ros-core
# generated from docker_images/create_ros_core_image.Dockerfile.em
# name the image as noetic_cuda11_1_cudnn8
FROM nvidia/cuda:11.1.1-cudnn8-devel-ubuntu20.04

# avoid interactive tzdata
ARG DEBIAN_FRONTEND=noninteractive
# or
# RUN DEBIAN_FRONTEND=noninteractive apt install -y tzdata
# COPY ./keyboard /etc /default /keyboard
# RUN DEBIAN_FRONTEND=noninteractive apt-get install keyboard-configuration

COPY ./rosdep-repair.sh /rosdep-repair.sh

# install packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    dirmngr \
    gnupg2 
    # && rm -rf /var/lib/apt/lists/*

# setup sources.list
# RUN echo "deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main" > /etc/apt/sources.list.d/ros-latest.list
RUN echo "deb http://packages.ros.org/ros/ubuntu focal main" > /etc/apt/sources.list.d/ros-latest.list


# setup keys
# RUN apt install -y curl
# RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
# or
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# install ros packages
ENV ROS_DISTRO=noetic 
RUN apt update && apt install -y ros-noetic-desktop-full
RUN echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc && /bin/bash -c "source ~/.bashrc"

# install bootstrap tools & bootstrap rosdep
RUN apt install -y python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential
# RUN apt install -y python3-pip
# RUN rm /etc/ros/rosdep/sources.list.d/20-default.list
# RUN echo "199.232.28.133 raw.githubusercontent.com" >> /etc/hosts
# 185.199.109.133
# RUN echo "151.101.228.133 raw.github.com" >> /etc/hosts
RUN rosdep init
# for m.l.china only, run this bash to fix the time-out issue of rosdep update: 
RUN bash rosdep-repair.sh
RUN rosdep update


# RUN echo "deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main" \
#         > /etc/apt/sources.list.d/ros-latest.list
# RUN wget http://packages.ros.org/ros.key -O - | apt-key add -

RUN apt-get update \
        && apt-get install -y python3-catkin-tools 
        # && rm -rf /var/lib/apt/lists/


# setup entrypoint
COPY ./ros_entrypoint.sh.ros /ros_entrypoint.sh 
RUN ["chmod", "+x", "/ros_entrypoint.sh"]

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]